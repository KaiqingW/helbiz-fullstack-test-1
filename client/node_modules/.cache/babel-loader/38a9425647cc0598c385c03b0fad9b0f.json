{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/davidwang/Documents/helbiz-fullstack-test/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/davidwang/Documents/helbiz-fullstack-test/client/src/pages/bike.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query GetBikeById ($id: ID!) {\\n    bike (bike_id: $id){\\n      bike_id\\n      lat\\n      lon\\n      is_reserved\\n      is_disabled\\n      vehicle_type\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Loading } from '../components';\nimport { StyledDiv } from './bikes';\nexport const GET_BIKE_BY_ID = gql(_templateObject());\n\nconst Bike = ({\n  id\n}) => {\n  const _useQuery = useQuery(GET_BIKE_BY_ID, {\n    variables: {\n      id\n    }\n  }),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 23\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data.bike) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }\n  }, \"Not found\");\n  console.log(data);\n  return /*#__PURE__*/React.createElement(StyledDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \" \", data.bike.bike_id), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, \" \", data.bike.lat), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, \" \", data.bike.lon), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \" \", data.bike.is_reserved ? 'yes' : 'no'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, \" \", data.bike.is_disabled ? 'yes' : 'no'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \" \", data.bike.vehicle_type));\n};\n\nexport default Bike;","map":{"version":3,"sources":["/Users/davidwang/Documents/helbiz-fullstack-test/client/src/pages/bike.jsx"],"names":["React","gql","useQuery","Loading","StyledDiv","GET_BIKE_BY_ID","Bike","id","variables","data","loading","error","bike","console","log","bike_id","lat","lon","is_reserved","is_disabled","vehicle_type"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,SAAT,QAA0B,SAA1B;AAEA,OAAO,MAAMC,cAAc,GAAGJ,GAAH,mBAApB;;AAaP,MAAMK,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAU;AAAA,oBACYL,QAAQ,CAACG,cAAD,EAAgB;AAAEG,IAAAA,SAAS,EAAE;AAAED,MAAAA;AAAF;AAAb,GAAhB,CADpB;AAAA,QACbE,IADa,aACbA,IADa;AAAA,QACPC,OADO,aACPA,OADO;AAAA,QACEC,KADF,aACEA,KADF;;AAGrB,MAAID,OAAJ,EAAa,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,MAAI,CAACF,IAAI,CAACG,IAAV,EAAgB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,sBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKA,IAAI,CAACG,IAAL,CAAUG,OAAf,CADK,eAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKN,IAAI,CAACG,IAAL,CAAUI,GAAf,CAFK,eAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKP,IAAI,CAACG,IAAL,CAAUK,GAAf,CAHK,eAIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKR,IAAI,CAACG,IAAL,CAAUM,WAAV,GAAsB,KAAtB,GAA4B,IAAjC,CAJK,eAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKT,IAAI,CAACG,IAAL,CAAUO,WAAV,GAAsB,KAAtB,GAA4B,IAAjC,CALK,eAML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKV,IAAI,CAACG,IAAL,CAAUQ,YAAf,CANK,CAAP;AASD,CAhBD;;AAkBA,eAAed,IAAf","sourcesContent":["import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Loading } from '../components';\nimport { StyledDiv } from './bikes';\n\nexport const GET_BIKE_BY_ID = gql`\n  query GetBikeById ($id: ID!) {\n    bike (bike_id: $id){\n      bike_id\n      lat\n      lon\n      is_reserved\n      is_disabled\n      vehicle_type\n    }\n  }\n`;\n\nconst Bike = ({id}) => {\n  const { data, loading, error } = useQuery(GET_BIKE_BY_ID,{ variables: { id } });\n  \n  if (loading) return <Loading />;\n  if (error) return <p>ERROR</p>;\n  if (!data.bike) return <p>Not found</p>;\n  console.log(data);\n  return <StyledDiv>\n    <p> {data.bike.bike_id }</p>\n    <p> {data.bike.lat }</p>\n    <p> {data.bike.lon }</p>\n    <p> {data.bike.is_reserved?'yes':'no' }</p>\n    <p> {data.bike.is_disabled?'yes':'no' }</p>\n    <p> {data.bike.vehicle_type }</p>\n    </StyledDiv>;\n\n}\n\nexport default Bike;\n"]},"metadata":{},"sourceType":"module"}